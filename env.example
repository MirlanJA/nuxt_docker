# general settings
COMPOSE_PROJECT_NAME=my-app
APP_HOST=/home/user/www/my-app/src
APP_CONTAINER=/var/www/my-app

# image settings
NODE_IMAGE=node:latest

# nuxt settings

# Project name
PROJECT_NAME=my-app

# Programming language:
# { name: 'JavaScript', value: 'js' },
# { name: 'TypeScript', value: 'ts' }
LANGUAGE=js

# Package manager:
#{ name: 'Yarn', value: 'yarn' },
#{ name: 'Npm', value: 'npm' }
PM=yarn

# UI framework:
# { name: 'None', value: 'none' },
# { name: 'Ant Design Vue', value: 'ant-design-vue' },
# { name: 'Bootstrap Vue', value: 'bootstrap' },
# { name: 'Buefy', value: 'buefy' },
# { name: 'Bulma', value: 'bulma' },
# { name: 'Chakra UI', value: 'chakra-ui' },
# { name: 'Element', value: 'element-ui' },
# { name: 'Framevuerk', value: 'framevuerk' },
# { name: 'iView', value: 'iview' },
# { name: 'Tachyons', value: 'tachyons' },
# { name: 'Tailwind CSS', value: 'tailwind' },
# { name: 'Vuesax', value: 'vuesax' },
# { name: 'Vuetify.js', value: 'vuetify' }
UI=none

# Nuxt.js modules:
# { name: 'Axios', value: 'axios' },
# { name: 'Progressive Web App (PWA)', value: 'pwa' },
# { name: 'Content', value: 'content' }
FEATURES=[]

# Linting tools:
# { name: 'ESLint', value: 'eslint' },
# { name: 'Prettier', value: 'prettier' },
# { name: 'Lint staged files', value: 'lintStaged' },
# { name: 'StyleLint', value: 'stylelint' },
# { name: 'Commitlint', value: 'commitlint' }
LINTER=[]

# Testing framework:
# { name: 'None', value: 'none' },
# { name: 'Jest', value: 'jest' },
# { name: 'AVA', value: 'ava' },
#{ name: 'WebdriverIO', value: 'webdriverio' }
TEST=none

# Rendering mode:
# { name: 'Universal (SSR / SSG)', value: 'universal' },
# { name: 'Single Page App', value: 'spa' }
MODE=universal

# Deployment target:
# { name: 'Server (Node.js hosting)', value: 'server' },
# { name: 'Static (Static/JAMStack hosting)', value: 'static' }
TARGET=server

# Development tools:
# { name: 'jsconfig.json (Recommended for VS Code if you\'re not using typescript)', value: 'jsconfig.json' },
# { name: 'Semantic Pull Requests', value: 'semantic-pull-requests' },
# { name: 'Dependabot (For auto-updating dependencies, GitHub only)', value: 'dependabot' }
DEVTOOLS=[]